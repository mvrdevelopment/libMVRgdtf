name: Build Static

on:
    workflow_dispatch:

# test with: act -W '.github/workflows/build-static.yml'
jobs:
    build_windows:
        runs-on: windows-latest

        steps:
        # Prepare Visual Studio
        - name: Set up Visual Studio
          uses: microsoft/setup-msbuild@v2
          with:
            msbuild-architecture: x64

        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        # Xerces-C - setup
        - name: Xerces-C - prepare
          run: |
            mkdir xerces-c
            cd xerces-c
            curl -o xerces-c.zip https://dlcdn.apache.org//xerces/c/3/sources/xerces-c-3.2.5.zip
            tar -xf xerces-c.zip --strip-components=1

        # Xerces-C - build MD
        - name: Xerces-C - configure
          working-directory: xerces-c
          run: |
            mkdir build
            cd build
            cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX:PATH=libs -DCMAKE_CXX_FLAGS="/DWIN32 /D_WINDOWS -O2 -Ob2 -DNDEBUG" -DCMAKE_C_FLAGS="/DWIN32 /D_WINDOWS /W3" -DBUILD_SHARED_LIBS:BOOL=FALSE -Dxmlch-type=wchar_t

        - name: Xerces-C - build MinSizeRel
          working-directory: xerces-c/build
          run: |
            msbuild /m ALL_BUILD.vcxproj /p:Configuration=MinSizeRel
            msbuild /m INSTALL.vcxproj /p:Configuration=MinSizeRel

        - name: Xerces-C - build Debug
          working-directory: xerces-c/build
          run: |
            msbuild /m ALL_BUILD.vcxproj /p:Configuration=Debug
            msbuild /m INSTALL.vcxproj /p:Configuration=Debug

        # Xerces-C - build MT
        - name: Xerces-C - configure [MT]
          working-directory: xerces-c
          run: |
            mkdir build_mt
            cd build_mt
            cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX:PATH=libs -DCMAKE_CXX_FLAGS_DEBUG="/MTd /Zi /Ob0 /Od /RTC1" -DCMAKE_CXX_FLAGS_MINSIZEREL="/MT /O1 /Ob1 /DNDEBUG" -DCMAKE_C_FLAGS_DEBUG="/MTd /Zi /Ob0 /Od /RTC1" -DCMAKE_C_FLAGS_MINSIZEREL="/MT /O1 /Ob1 /DNDEBUG" -DCMAKE_C_FLAGS="/DWIN32 /D_WINDOWS /W3" -DBUILD_SHARED_LIBS:BOOL=FALSE -Dxmlch-type=wchar_t

        - name: Xerces-C - build MinSizeRel [MT]
          working-directory: xerces-c/build_mt
          run: |
            msbuild /m ALL_BUILD.vcxproj /p:Configuration=MinSizeRel
            msbuild /m INSTALL.vcxproj /p:Configuration=MinSizeRel

        - name: Xerces-C - build Debug [MT]
          working-directory: xerces-c/build_mt
          run: |
            msbuild /m ALL_BUILD.vcxproj /p:Configuration=Debug
            msbuild /m INSTALL.vcxproj /p:Configuration=Debug

        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        # Boost - setup and build
        - name: Boost - prepare
          run: |
            mkdir boost
            cd boost
            curl -o boost.zip https://archives.boost.io/release/1.86.0/source/boost_1_86_0.zip
            tar -xf boost.zip --strip-components=1

        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        # libMVRGdtf - setup
        - name: libMVRGdtf - checkout repository
          uses: actions/checkout@v4
          with:
            path: libMvrGdtf

        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: libMVRGdtf [MD_NO_MZ] - configure
          working-directory: libMvrGdtf
          run: |
            mkdir build_MD_NO_MZ
            cd build_MD_NO_MZ
            cmake .. -DCMAKE_INSTALL_PREFIX:PATH=libs -DWIN_RUNTIME_LIB=-MD -DXERCES_INCLUDE_PATH="..\xerces-c\build\libs\include;..\xerces\src" -DXERCES_LIB_PATH="..\xerces\build\libs\lib" -DXERCES_ROOT_PATH="..\xerces-c" -DDO_NOT_INCLUDE_MINI_ZIP=TRUE
            ren MvrGdtf.vcxproj MvrGdtf_ORG.vcxproj

        # libMVRGdtf - build Debug
        - name: libMVRGdtf [MD_NO_MZ] - Debug - add lib dependencies
          working-directory: libMvrGdtf/build_MD_NO_MZ
          run: |
            $xml = [xml](Get-Content MvrGdtf_ORG.vcxproj)
            $xml.Project.ItemDefinitionGroup | ForEach-Object {
              $node = $xml.CreateElement("AdditionalDependencies", "http://schemas.microsoft.com/developer/msbuild/2003")
              $node.InnerText = 'iphlpapi.lib;..\..\xerces-c\build\libs\lib\xerces-c_3D.lib;mdns_cpp\lib\Debug\mdns_cpp.lib;%(AdditionalDependencies)'
              $_.Lib.AppendChild($node) | Out-Null
            }
            Set-Content -Path "MvrGdtf.vcxproj" -Value $xml.OuterXml
          shell: pwsh
          
        - name: libMVRGdtf [MD_NO_MZ] - compile Debug
          working-directory: libMvrGdtf/build_MD_NO_MZ
          run: |
            msbuild /m ALL_BUILD.vcxproj /p:Configuration=Debug
            msbuild /m INSTALL.vcxproj /p:Configuration=Debug

        - name: libMVRGdtf [MD_NO_MZ] - compile Debug rename lib
          working-directory: libMvrGdtf
          run: ren "libs\Debug\MvrGdtf_NO_MZ-MD.lib" "MvrGdtf_NO_MZ-MDd.lib"
  
        # libMVRGdtf - build MinSizeRel
        - name: libMVRGdtf [MD_NO_MZ] - MinSizeRel - add lib dependencies
          working-directory: libMvrGdtf/build_MD_NO_MZ
          run: |
            $xml = [xml](Get-Content MvrGdtf_ORG.vcxproj)
            $xml.Project.ItemDefinitionGroup | ForEach-Object {
              $node = $xml.CreateElement("AdditionalDependencies", "http://schemas.microsoft.com/developer/msbuild/2003")
              $node.InnerText = 'iphlpapi.lib;..\..\xerces-c\build\libs\lib\xerces-c_3.lib;mdns_cpp\lib\MinSizeRel\mdns_cpp.lib;%(AdditionalDependencies)'
              $_.Lib.AppendChild($node) | Out-Null
            }
            Set-Content -Path "MvrGdtf.vcxproj" -Value $xml.OuterXml
          shell: pwsh
  
        - name: libMVRGdtf [MD_NO_MZ] - compile MinSizeRel
          working-directory: libMvrGdtf/build_MD_NO_MZ
          run: |
            msbuild /m ALL_BUILD.vcxproj /p:Configuration=MinSizeRel
            msbuild /m INSTALL.vcxproj /p:Configuration=MinSizeRel

        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: libMVRGdtf [MD] - configure
          working-directory: libMvrGdtf
          run: |
            mkdir build_MD
            cd build_MD
            cmake .. -DCMAKE_INSTALL_PREFIX:PATH=libs -DWIN_RUNTIME_LIB=-MD -DXERCES_INCLUDE_PATH="..\xerces-c\build\libs\include;..\xerces\src" -DXERCES_LIB_PATH="..\xerces\build\libs\lib" -DXERCES_ROOT_PATH="..\xerces-c\build"
            ren MvrGdtf.vcxproj MvrGdtf_ORG.vcxproj

        # libMVRGdtf - build Debug
        - name: libMVRGdtf [MD] - Debug - add lib dependencies
          working-directory: libMvrGdtf/build_MD
          run: |
            $xml = [xml](Get-Content MvrGdtf_ORG.vcxproj)
            $xml.Project.ItemDefinitionGroup | ForEach-Object {
              $node = $xml.CreateElement("AdditionalDependencies", "http://schemas.microsoft.com/developer/msbuild/2003")
              $node.InnerText = 'iphlpapi.lib;..\..\xerces-c\build\libs\lib\xerces-c_3D.lib;mdns_cpp\lib\Debug\mdns_cpp.lib;%(AdditionalDependencies)'
              $_.Lib.AppendChild($node) | Out-Null
            }
            Set-Content -Path "MvrGdtf.vcxproj" -Value $xml.OuterXml
          shell: pwsh
          
        - name: libMVRGdtf [MD] - compile Debug
          working-directory: libMvrGdtf/build_MD
          run: |
            msbuild /m ALL_BUILD.vcxproj /p:Configuration=Debug
            msbuild /m INSTALL.vcxproj /p:Configuration=Debug

        - name: libMVRGdtf [MD] - compile Debug rename lib
          working-directory: libMvrGdtf
          run: ren "libs\Debug\MvrGdtf-MD.lib" "MvrGdtf-MDd.lib"

        # libMVRGdtf - build MinSizeRel
        - name: libMVRGdtf [MD] - MinSizeRel - add lib dependencies
          working-directory: libMvrGdtf/build_MD
          run: |
            $xml = [xml](Get-Content MvrGdtf_ORG.vcxproj)
            $xml.Project.ItemDefinitionGroup | ForEach-Object {
              $node = $xml.CreateElement("AdditionalDependencies", "http://schemas.microsoft.com/developer/msbuild/2003")
              $node.InnerText = 'iphlpapi.lib;..\..\xerces-c\build\libs\lib\xerces-c_3.lib;mdns_cpp\lib\MinSizeRel\mdns_cpp.lib;%(AdditionalDependencies)'
              $_.Lib.AppendChild($node) | Out-Null
            }
            Set-Content -Path "MvrGdtf.vcxproj" -Value $xml.OuterXml
          shell: pwsh
  
        - name: libMVRGdtf [MD] - compile MinSizeRel
          working-directory: libMvrGdtf/build_MD
          run: |
            msbuild /m ALL_BUILD.vcxproj /p:Configuration=MinSizeRel
            msbuild /m INSTALL.vcxproj /p:Configuration=MinSizeRel

        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: libMVRGdtf [MT] - configure
          working-directory: libMvrGdtf
          run: |
            mkdir build_MT
            cd build_MT
            cmake .. -DCMAKE_INSTALL_PREFIX:PATH=libs -DWIN_RUNTIME_LIB=-MT -DXERCES_INCLUDE_PATH="..\xerces-c\build_mt\libs\include;..\xerces\src" -DXERCES_LIB_PATH="..\xerces\build_mt\libs\lib" -DXERCES_ROOT_PATH="..\xerces-c\build_mt"
            ren MvrGdtf.vcxproj MvrGdtf_ORG.vcxproj

        # libMVRGdtf - build Debug
        - name: libMVRGdtf [MT] - Debug - add lib dependencies
          working-directory: libMvrGdtf/build_MT
          run: |
            $xml = [xml](Get-Content MvrGdtf_ORG.vcxproj)
            $xml.Project.ItemDefinitionGroup | ForEach-Object {
              $node = $xml.CreateElement("AdditionalDependencies", "http://schemas.microsoft.com/developer/msbuild/2003")
              $node.InnerText = 'iphlpapi.lib;..\..\xerces-c\build_mt\libs\lib\xerces-c_3D.lib;mdns_cpp\lib\Debug\mdns_cpp.lib;%(AdditionalDependencies)'
              $_.Lib.AppendChild($node) | Out-Null
            }
            Set-Content -Path "MvrGdtf.vcxproj" -Value $xml.OuterXml
          shell: pwsh
          
        - name: libMVRGdtf [MT] - compile Debug
          working-directory: libMvrGdtf/build_MT
          run: |
            msbuild /m ALL_BUILD.vcxproj /p:Configuration=Debug
            msbuild /m INSTALL.vcxproj /p:Configuration=Debug

        - name: libMVRGdtf [MT] - compile Debug rename lib
          working-directory: libMvrGdtf
          run: ren "libs\Debug\MvrGdtf-MT.lib" "MvrGdtf-MTd.lib"

        # libMVRGdtf - build MinSizeRel
        - name: libMVRGdtf [MT] - MinSizeRel - add lib dependencies
          working-directory: libMvrGdtf/build_MT
          run: |
            $xml = [xml](Get-Content MvrGdtf_ORG.vcxproj)
            $xml.Project.ItemDefinitionGroup | ForEach-Object {
              $node = $xml.CreateElement("AdditionalDependencies", "http://schemas.microsoft.com/developer/msbuild/2003")
              $node.InnerText = 'iphlpapi.lib;..\..\xerces-c\build_mt\libs\lib\xerces-c_3.lib;mdns_cpp\lib\MinSizeRel\mdns_cpp.lib;%(AdditionalDependencies)'
              $_.Lib.AppendChild($node) | Out-Null
            }
            Set-Content -Path "MvrGdtf.vcxproj" -Value $xml.OuterXml
          shell: pwsh
  
        - name: libMVRGdtf [MT] - compile MinSizeRel
          working-directory: libMvrGdtf/build_MT
          run: |
            msbuild /m ALL_BUILD.vcxproj /p:Configuration=MinSizeRel
            msbuild /m INSTALL.vcxproj /p:Configuration=MinSizeRel

        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: libMVRGdtf - Generate output library
          working-directory: libMvrGdtf
          run: |
            if (Test-Path -Path "output") {
              Remove-Item -Path "output" -Recurse -Force
            }
            New-Item -Path "output\libMvrGdtf\lib" -ItemType Directory -Force
            Copy-Item -Path "libs\MinSizeRel\*" -Destination "output\libMvrGdtf\lib" -Recurse
            Copy-Item -Path "libs\Debug\*" -Destination "output\libMvrGdtf\lib" -Recurse

            New-Item -Path "output\libMvrGdtf\include" -ItemType Directory -Force
            Copy-Item -Path "src\Include\*" -Destination "output\libMvrGdtf\include" -Recurse
            
            if (Test-Path -Path "libs\MinSizeRel") {
              Remove-Item -Path "libs\MinSizeRel" -Recurse -Force
            }
              
            if (Test-Path -Path "libs\Debug") {
              Remove-Item -Path "libs\Debug" -Recurse -Force
            }
          shell: pwsh

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: libMVRgdtf-win
            path: libMvrGdtf/output

    build_mac:
      runs-on: macos-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v2


        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        # Xerces-C - setup and build
        - name: Xerces-C - prepare
          run: |
            mkdir xerces-c
            cd xerces-c
            curl -o xerces-c.zip https://dlcdn.apache.org//xerces/c/3/sources/xerces-c-3.2.5.zip
            tar -xf xerces-c.zip --strip-components=1

        - name: Xerces-C - build arm64
          working-directory: xerces-c
          run: |
            ./configure --disable-shared --prefix=$(pwd)/_build_mac_arm CFLAGS="-arch arm64" CXXFLAGS="-arch arm64"
            make -j
            make install

        - name: Xerces-C - build x64
          working-directory: xerces-c
          run: |
            ./configure --disable-shared --prefix=$(pwd)/_build_mac_x64 CFLAGS="-arch x86_64" CXXFLAGS="-arch x86_64"
            make -j
            make install

        - name: Xerces-C - lipo arm/x64
          working-directory: xerces-c
          run: lipo _build_mac_arm/lib/libxerces-c.a _build_mac_x64/lib/libxerces-c.a -create -output _build_mac_x64/lib/libxerces-c-all.a


        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        # Boost - setup
        - name: Boost - prepare
          run: |
            mkdir boost
            cd boost
            curl -o boost.zip https://archives.boost.io/release/1.86.0/source/boost_1_86_0.zip
            tar -xf boost.zip --strip-components=1


        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        # libMVRGdtf - checkout repository
        - name: libMVRGdtf - checkout repository
          uses: actions/checkout@v4
          with:
            path: libMvrGdtf


        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        # libMVRGdtf - setup and build
        - name: libMVRGdtf - build x64 [NO-MZ] (this should produce arm/x64 libraries)
          working-directory: libMvrGdtf
          run: |
            mkdir build_mac_x64_no_mz
            cd build_mac_x64_no_mz
            cmake .. -DCMAKE_C_FLAGS="-arch x86_64" -DCMAKE_CXX_FLAGS="-arch x86_64" -DDO_NOT_INCLUDE_MINI_ZIP=true -DCMAKE_INSTALL_PREFIX:PATH=libs -DXERCES_INCLUDE_PATH="../xerces-c/_build_mac_x64/include;../xerces/src" -DXERCES_LIB_PATH="../xerces/_build_mac_x64/lib" -DXERCES_ROOT_PATH="../xerces-c/_build_mac_x64"
            make -j
            make install
            echo Combine into single lib file...
            echo lipo -archs ../libs/libMvrGdtf_NO_MZ.a
            lipo -archs ../libs/libMvrGdtf_NO_MZ.a
            echo lipo -archs ./libs/lib/libmdns_cpp.a
            lipo -archs ./libs/lib/libmdns_cpp.a
            echo lipo -archs ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a
            lipo -archs ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a
            libtool -static -o ../libs/libMvrGdtf_NO_MZ-all.a ../libs/libMvrGdtf_NO_MZ.a ./libs/lib/libmdns_cpp.a ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a
            mv -f ../libs/libMvrGdtf_NO_MZ-all.a ../libs/libMvrGdtf_NO_MZ.a

        - name: libMVRGdtf - build x64 (this should produce arm/x64 libraries)
          working-directory: libMvrGdtf
          run: |
            mkdir build_mac_x64
            cd build_mac_x64
            cmake .. -DCMAKE_C_FLAGS="-arch x86_64" -DCMAKE_CXX_FLAGS="-arch x86_64" -DCMAKE_INSTALL_PREFIX:PATH=libs -DXERCES_INCLUDE_PATH="../xerces-c/_build_mac_x64/include;../xerces/src" -DXERCES_LIB_PATH="../xerces/_build_mac_x64/lib" -DXERCES_ROOT_PATH="../xerces-c/_build_mac_x64"
            make -j
            make install
            echo Combine into single lib file...
            echo lipo -archs ../libs/libMvrGdtf.a
            lipo -archs ../libs/libMvrGdtf.a
            echo lipo -archs ./libs/lib/libmdns_cpp.a
            lipo -archs ./libs/lib/libmdns_cpp.a
            echo lipo -archs ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a
            lipo -archs ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a
            libtool -static -o ../libs/libMvrGdtf-all.a ../libs/libMvrGdtf.a ./libs/lib/libmdns_cpp.a ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a
            mv -f ../libs/libMvrGdtf-all.a ../libs/libMvrGdtf.a

        # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        - name: Collect Artifact
          working-directory: libMvrGdtf
          run: |
            mkdir -p output/include
            cp -r src/include/* output/include/
            mkdir -p output/lib
            cp -r libs/* output/lib/

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: libMVRgdtf-mac
            path: |
              libMvrGdtf/output


    build_linux:

      runs-on: ubuntu-latest
  
      steps:
      # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      # Install curl
      - name: Install prerequisites
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libboost-all-dev
          sudo apt-get install -y libcurl4-openssl-dev
          sudo apt-get install -y cmake
  
      # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      # Xerces-C - setup and build
      # we need to compile it ourselves because libMVRGdtf expects XMLChar be uint16_t
      - name: Xerces-C - prepare
        run: |
          mkdir xerces-c
          cd xerces-c
          curl -o xerces-c.zip https://dlcdn.apache.org//xerces/c/3/sources/xerces-c-3.2.5.zip
          unzip xerces-c.zip -d . && mv xerces-c-*/* .
  
      - name: Xerces-C - build
        working-directory: xerces-c
        run: |
          ./configure --disable-shared --enable-xmlch-uint16_t --prefix=$(pwd)/_build
          make -j
          make install
    
      # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      # libMVRGdtf - checkout repository
      - name: libMVRGdtf - checkout repository
        uses: actions/checkout@v4
        with:
          path: libMvrGdtf
          
      # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      # libMVRGdtf - setup and build and test
      - name: libMVRGdtf - build
        working-directory: libMvrGdtf
        run: |
          mkdir build
          cd build
          cmake .. -DUNITTEST=TRUE -DEXTRA_LIBS="curl;icuuc;icudata;icui18n;icuio" -DXERCES_LIB_PATH="$(pwd)/../../xerces-c/_build/lib/libxerces-c.a"
          make -j
    
      # --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      - name: Collect Artifact
        working-directory: libMvrGdtf
        run: |
          mkdir -p output/include
          cp -r src/Include/* output/include/
          
          mkdir -p output/lib
          cp -r libs/* output/lib/
  
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libMVRgdtf-linux
          path: |
            libMvrGdtf/output
            





