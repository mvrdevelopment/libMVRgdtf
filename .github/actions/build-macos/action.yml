name: 'Build macOS'
description: 'Build ths packages for MACOS package'
runs:
  using: "composite"
  steps:
    - name: OpenSSL - prepare
      shell: bash
      run: |
        mkdir openssl-src
        cd openssl-src
        curl -L -o openssl.tar.gz https://www.openssl.org/source/openssl-1.1.1w.tar.gz
        tar -xvzf openssl.tar.gz --strip-components=1

    - name: OpenSSL - configure
      shell: bash
      run: |
        cd ./openssl-src
        ./Configure darwin64-x86_64-cc no-shared --prefix=$(pwd)/_build_mac_x64
        make -j
        make install

    - name: OpenSSL - lipo arm/x64
      shell: bash
      working-directory: openssl-src
      run: |
        lipo /opt/homebrew/opt/openssl/lib/libcrypto.a _build_mac_x64/lib/libcrypto.a -create -output _build_mac_x64/lib/libcrypto-all.a

    - name: OpenSSL - lipo arm/x64
      shell: bash
      working-directory: openssl-src
      run: |
        lipo /opt/homebrew/opt/openssl/lib/libssl.a _build_mac_x64/lib/libssl.a -create -output _build_mac_x64/lib/libssl-all.a

    - name: Xerces-C - prepare
      shell: bash
      run: |
        mkdir xerces-c
        cd xerces-c
        curl -o xerces-c.zip https://dlcdn.apache.org/xerces/c/3/sources/xerces-c-3.3.0.zip
        tar -xf xerces-c.zip --strip-components=1

    - name: Xerces-C - build arm64
      shell: bash
      working-directory: xerces-c
      run: |
        ./configure --disable-shared --prefix=$(pwd)/_build_mac_arm CFLAGS="-arch arm64" CXXFLAGS="-arch arm64" --enable-xmlch-uint16_t
        make -j
        make install

    - name: Xerces-C - build x64
      shell: bash
      working-directory: xerces-c
      run: |
        ./configure --disable-shared --prefix=$(pwd)/_build_mac_x64 CFLAGS="-arch x86_64" CXXFLAGS="-arch x86_64" --enable-xmlch-uint16_t
        make -j
        make install

    - name: Xerces-C - lipo arm/x64
      shell: bash
      working-directory: xerces-c
      run: lipo _build_mac_arm/lib/libxerces-c.a _build_mac_x64/lib/libxerces-c.a -create -output _build_mac_x64/lib/libxerces-c-all.a

    - name: Boost - prepare
      shell: bash
      run: |
        mkdir boost
        cd boost
        curl -o boost.zip https://archives.boost.io/release/1.86.0/source/boost_1_86_0.zip
        tar -xf boost.zip --strip-components=1

    - name: libMVRGdtf - build x64 [NO-MZ] (this should produce arm/x64 libraries)
      shell: bash
      working-directory: libMvrGdtf
      run: |
        mkdir build_mac_x64_no_mz
        cd build_mac_x64_no_mz
        cmake .. -DCMAKE_C_FLAGS="-arch x86_64" -DCMAKE_CXX_FLAGS="-arch x86_64" -DDO_NOT_INCLUDE_MINI_ZIP=true -DCMAKE_INSTALL_PREFIX:PATH=libs -DXERCES_INCLUDE_PATH="../xerces-c/_build_mac_x64/include;../xerces/src" -DXERCES_LIB_PATH="../xerces/_build_mac_x64/lib" -DXERCES_ROOT_PATH="../xerces-c/_build_mac_x64" -DOPENSSL_PATH="../openssl-src/_build_mac_x64" -DOPENSSL_INCLUDE_DIR="../openssl-src/_build_mac_x64/include" -DOPENSSL_LIBRARIES="../openssl-src/_build_mac_x64/lib"
        make -j
        make install
        echo Combine into single lib file...
        echo lipo -archs ../libs/libMvrGdtf_NO_MZ.a
        lipo -archs ../libs/libMvrGdtf_NO_MZ.a
        echo lipo -archs ./libs/lib/libmdns_cpp.a
        lipo -archs ./libs/lib/libmdns_cpp.a
        echo lipo -archs ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a
        lipo -archs ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a
        echo lipo -archs ../../openssl-src/_build_mac_x64/lib/libcrypto-all.a
        lipo -archs ../../openssl-src/_build_mac_x64/lib/libcrypto-all.a
         echo lipo -archs ../../openssl-src/_build_mac_x64/lib/libssl-all.a
        lipo -archs ../../openssl-src/_build_mac_x64/lib/libssl-all.a
        libtool -static -o ../libs/libMvrGdtf_NO_MZ-all.a ../libs/libMvrGdtf_NO_MZ.a ./libs/lib/libmdns_cpp.a ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a ../../openssl-src/_build_mac_x64/lib/libcrypto-all.a ../../openssl-src/_build_mac_x64/lib/libssl-all.a
        mv -f ../libs/libMvrGdtf_NO_MZ-all.a ../libs/libMvrGdtf_NO_MZ.a

    - name: libMVRGdtf - build x64 (this should produce arm/x64 libraries)
      shell: bash
      working-directory: libMvrGdtf
      run: |
        mkdir build_mac_x64
        cd build_mac_x64
        cmake .. -DCMAKE_C_FLAGS="-arch x86_64" -DCMAKE_CXX_FLAGS="-arch x86_64" -DCMAKE_INSTALL_PREFIX:PATH=libs -DXERCES_INCLUDE_PATH="../xerces-c/_build_mac_x64/include;../xerces/src" -DXERCES_LIB_PATH="../xerces/_build_mac_x64/lib" -DXERCES_ROOT_PATH="../xerces-c/_build_mac_x64" -DOPENSSL_PATH="../openssl-src/_build_mac_x64" -DOPENSSL_INCLUDE_DIR="../openssl-src/_build_mac_x64/include" -DOPENSSL_LIBRARIES="../openssl-src/_build_mac_x64/lib"
        make -j
        make install
        echo Combine into single lib file...
        echo lipo -archs ../libs/libMvrGdtf.a
        lipo -archs ../libs/libMvrGdtf.a
        echo lipo -archs ./libs/lib/libmdns_cpp.a
        lipo -archs ./libs/lib/libmdns_cpp.a
        echo lipo -archs ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a
        lipo -archs ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a
        echo lipo -archs ../../openssl-src/_build_mac_x64/lib/libcrypto-all.a
        lipo -archs ../../openssl-src/_build_mac_x64/lib/libcrypto-all.a
        echo lipo -archs ../../openssl-src/_build_mac_x64/lib/libssl-all.a
        lipo -archs ../../openssl-src/_build_mac_x64/lib/libssl-all.a
        libtool -static -o ../libs/libMvrGdtf-all.a ../libs/libMvrGdtf.a ./libs/lib/libmdns_cpp.a ../../xerces-c/_build_mac_x64/lib/libxerces-c-all.a ../../openssl-src/_build_mac_x64/lib/libcrypto-all.a ../../openssl-src/_build_mac_x64/lib/libssl-all.a
        mv -f ../libs/libMvrGdtf-all.a ../libs/libMvrGdtf.a

    - name: Prepare package
      shell: bash
      working-directory: libMvrGdtf
      run: |
        mkdir -p output/include
        cp -r src/include/* output/include/
        mkdir -p output/lib
        cp -r libs/* output/lib/
